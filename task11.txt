Задание.

Уровень 1.

1.
1) Модифицировать исходный код ядра (ap123/linux/kernels/mips-linux-2.6.31), собрать ядро, собрать прошивку с этим ядром, прошить роутер этой прошивкой.
Модифицировать системный вызов open так, чтобы при открытии файлов отображались их имена.
2) Написать шеллкод, предоставляющий удалённую оболочку.

2. Написать шеллкод, предоставляющий оболочку без нулевых байт.
Проэксплуатировать программы wr841n\task\stov1, wr841n\task\stov2 и выполнить этот шеллкод.



Уровень 2.

1. Модифицировать образ ядра в прошивке.
Извлечь ядро из файла обновления прошивки, модифицировать бинарный образ и собрать прошивку с модифицированным ядром.
1) Внедрить шеллкод (найти свободное место). Обеспечить передачу управления на шеллкод.
2) Шеллкод при запуске должен найти функцию execve (можно системными вызовами прочитать файл /proc/kallsyms) и перехватить её.
3) В коде перехвата выводить имена запускаемых программ и запрещать запуск программ с некоторыми именами.


2. Проэксплуатировать простые уязвимости. Наша версия роутера (wr841n v8) в описании уязвимости может быть не указана. Но всё равно стоит попытать её проэксплуатировать - надо провести исследование, продизассемблировать нужные функции. Можно поэкспериментировать с разными версиями прошивки (надо проэксплуатировать хотя бы на одной).
https://xakep.ru/2012/11/21/59676/
https://www.opencve.io/cve/CVE-2012-6276
https://www.opencve.io/cve/CVE-2012-5687
https://www.opencve.io/cve/CVE-2012-6316
https://www.opencve.io/cve/CVE-2018-12575
https://www.opencve.io/cve/CVE-2018-12576
https://www.opencve.io/cve/CVE-2018-12574
https://www.opencve.io/cve/CVE-2018-11714
https://www.opencve.io/cve/CVE-2018-12577
https://www.opencve.io/cve/CVE-2020-35576
https://www.opencve.io/cve/CVE-2022-0162
https://www.opencve.io/cve/CVE-2022-42202
https://www.opencve.io/cve/CVE-2023-33538
https://www.opencve.io/cve/CVE-2022-42433
https://www.opencve.io/cve/CVE-2023-36489



Уровень 3.

1. Реализовать руткит.
Внедрять руткит в файл прошивки.
Руткит должен находиться на флешке, но не в файловой системе. Т.е. либо в загрузчике либо в ядре. Можно реализовать его в виде буткита, стартующего из загрузчика и заражающего считыаемое с флешки в память ядро. Можно располагать в виде шеллкода в ядре. Можно располагать в ядре маленький шеллкод, который загрузит с флешки (но не из файловой системы) драйвер руткита. В итоге во время исполнения руткит должен оказаться в пространстве ядра.
Руткит должен динамически определять адреса нужных функций и перехватывать их. Должна быть реализована стандартная функциональность:
- скрытие файлов;
- скрытие процессов;
- скрытие драйверов;
- скрытие сетевых соединений.

Дополнительно можно рассмотреть следующую функциональность:
- защита от перезаписи флешки: не давать пользователю обновлением затирать руткит на флешке;
- реализовать заражение флешки на работающем роутере, т.е. реализовать программу, которая запустится на роутере, считает прошивку, заразит её и запишет на флешку;
- реализовать сценарий атаки: проэксплуатировать удалённую уязвимость, повысить привилегии, заразить прошивку руткитом.


2. Проэксплуатировать уязвимости повреждения памяти и выполнить шеллкод. Можно воспользоваться информацией из CVE. Можно подизассемблировать модуль httpd и проверить обработку пользовательского ввода - там должно быть полно уязвимостей. Можно сравнить пропатченный модуль httpd. На сайте производителя побольше разных версий прошивки можно найти на разных языках (на одном языке мало версий):
https://www.tp-link.com/ru/support/download/tl-wr841nd/v8/#Firmware
https://www.tp-link.com/en/support/download/tl-wr841nd/v8/#Firmware
https://www.tp-link.com/uk/support/download/tl-wr841nd/v8/#Firmware
https://www.tp-link.com/tw/support/download/tl-wr841n/v8/#Firmware

https://www.programmerall.com/article/40651767021/
https://www.opencve.io/cve/CVE-2019-17147
https://www.opencve.io/cve/CVE-2020-8423
https://www.opencve.io/cve/CVE-2022-25073
https://www.opencve.io/cve/CVE-2023-33536
https://www.opencve.io/cve/CVE-2023-33537
https://www.opencve.io/cve/CVE-2023-36354
https://www.opencve.io/cve/CVE-2023-36356
https://www.opencve.io/cve/CVE-2023-36357
https://www.opencve.io/cve/CVE-2023-36358
https://www.opencve.io/cve/CVE-2023-36359
https://www.opencve.io/cve/CVE-2022-30024
